/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import model.Entregador;
import model.Pedido;
import model.Padaria;
import model.Produto;
import model.Embalador;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author laeciorodrigues
 */
public class TelaCadastrarPedido extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastrarPedido
     */
    Padaria padaria;
    public TelaCadastrarPedido(Padaria pad) {
        padaria = pad;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idCliente = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        btVoltar = new javax.swing.JButton();
        btConfirmar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("CADASTRAR PEDIDO");

        jLabel3.setText("ID do Cliente:");

        jLabel4.setText("Pedido:");

        idCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClienteActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Pão de Queijo");

        jCheckBox2.setText("Misto Quente");

        jCheckBox3.setText("Bauru");

        jCheckBox4.setText("Hamburguer");

        jCheckBox5.setText("Pão (simples)");

        jCheckBox6.setText("X-Bacon");

        jCheckBox7.setText("X-Tudo");

        jCheckBox8.setText("Bolo de Milho");

        jCheckBox9.setText("Bolo de Chocolate");

        jCheckBox10.setText("Bolo de Cenoura");

        jCheckBox11.setText("Refrigerante (lata)");

        jCheckBox12.setText("Refrigerante (2l)");

        jCheckBox13.setText("Suco");

        jCheckBox14.setText("Vitamina");

        jLabel5.setText("OBS: Vitamina e suco todos os sabore tem o mesmo valor");

        btVoltar.setText("VOLTAR");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btConfirmar.setText("CONFIRMAR PEDIDO");
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jCheckBox4)
                                                .addComponent(jCheckBox3))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jCheckBox10)
                                                .addComponent(jCheckBox9)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jCheckBox5)
                                                .addComponent(jCheckBox6)
                                                .addComponent(jCheckBox13))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jCheckBox12)
                                                .addComponent(jCheckBox11)
                                                .addComponent(jCheckBox14))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox2)
                                            .addComponent(jCheckBox1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox8)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(jCheckBox7))))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btVoltar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btConfirmar))
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox13)
                    .addComponent(jCheckBox14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btVoltar)
                    .addComponent(btConfirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        TelaPedidos ped = new TelaPedidos(padaria);
        ped.setLocationRelativeTo(null);
        ped.setVisible(true);
        dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void btConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmarActionPerformed
        Embalador embala = new Embalador();
        Entregador entre = new Entregador();
        Pedido pedido = new Pedido();
        pedido.setPreco(0.0);
        //Produto produto = new Produto();
        String id = null;
        int veriSel = 0; 
        id = idCliente.getText();
        int verID = 0;
        int verQtd = 1;
        if(padaria.getClientes()!=null){
            for(int i=0; i<padaria.getClientes().size();i++){
                if(id.equals(String.valueOf(padaria.getClientes().get(i).getID()))){
                    pedido.setCliente(padaria.getClientes().get(i));
                    if(padaria.getClientes().get(i).getStatus().equals("vip")){
                        pedido.setBrinde("Sim");
                    }else{
                        pedido.setBrinde("Não");
                    }
                    if(jCheckBox1.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Pão de Queijo")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Pão de Queijo!");
                                }
                            }
                        }
                    }
                    if(jCheckBox2.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Misto Quente")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Misto Quente!");
                                }
                            }
                        }
                    }
                    if(jCheckBox3.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Bauru")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Bauru!");
                                }
                            }
                        }
                    }
                    if(jCheckBox4.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Hamburguer")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Hamburgues!");
                                }
                            }
                        }
                    }
                    if(jCheckBox5.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Pão (simples)")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Pão (simples)!");
                                }
                            }
                        }
                    }
                    if(jCheckBox6.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("X-Bacon")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem X-Bacon!");
                                }
                            }
                        }
                    }
                    if(jCheckBox7.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("X-Tudo")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem X-Tudo!");
                                }
                            }
                        }
                    }
                    if(jCheckBox8.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Bolo de Milho")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Bolo de Milho!");
                                }
                            }
                        }
                    }
                    if(jCheckBox9.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Bolo de Chocolate")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Bolo de Chocolate!");
                                }
                            }
                        }
                    }
                    if(jCheckBox10.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Bolo de Cenoura")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Bolo de Cenoura!");
                                }
                            }
                        }
                    }
                    if(jCheckBox11.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Refrigerante (lata)")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Refrigerante (lata)!");
                                }
                            }
                        }
                    }
                    if(jCheckBox12.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Refrigerante (2l)")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Refrigerante (2l)!");
                                }
                            }
                        }
                    }
                    if(jCheckBox13.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Suco")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Suco!");
                                }
                            }
                        }
                    }
                    if(jCheckBox14.isSelected()){
                        for(int z=0;z<padaria.getProdutos().size();z++){
                            if(padaria.getProdutos().get(z).getNome().equals("Vitamina")){
                                if(padaria.getProdutos().get(z).getQtd()>0){
                                    pedido.getProdutos().add(padaria.getProdutos().get(z));
                                    pedido.setPreco(pedido.getPreco()+padaria.getProdutos().get(z).getPreco());
                                    padaria.getProdutos().get(z).setQtd(padaria.getProdutos().get(z).getQtd()-1);
                                }else{
                                    verQtd = 0;
                                    JFrame frame = new JFrame ("Aviso!");
                                    JOptionPane.showMessageDialog (frame, "Sem Vitamina!");
                                }
                            }
                        }
                    }
                    pedido.setStatus("Aguardando");
                    int cont=0;
                    if(padaria.getPedidos().size()!=0){
                        int z;
                        for(z=0;z<padaria.getPedidos().size();z++){
                            cont+=1;
                        }
                        if(padaria.getPedidos().get(z-1).getID() == cont){
                            cont+=1;
                        }
                    }
                    if(verQtd == 1){
                        verID = 1;
                        pedido.setID(cont);
                        int tamanho = padaria.getPedidos().size();
                        //if(ve==0){
                        int veri = 0;
                        for(int h=0; h<tamanho;h++){
                            if((padaria.getPedidos().get(h).getCliente().getLat()+padaria.getPedidos().get(h).getCliente().getLog())>(pedido.getCliente().getLat()+pedido.getCliente().getLog())){
                                padaria.getPedidos().add(h, pedido);
                                veri = 1;
                            }

                        }
                        if(veri == 0){
                            padaria.getPedidos().add(pedido);
                        }
                        if(padaria.getEmbaladores()!=null){
                            padaria.getEmbaladores().get(0).setStatus(embala.trabalhando());
                        }
                        if(padaria.getEntregadores()!=null){
                            padaria.getEntregadores().get(0).setStatus(entre.trabalhando());
                        }
                    }
                }
                
            }
        }
        if(verID == 1){
            JFrame frame = new JFrame ("Aviso!");
            JOptionPane.showMessageDialog (frame, "Cadastrado Com Sucesso!");

            TelaCadastrarPedido cadpedido = new TelaCadastrarPedido(padaria);
            cadpedido.setLocationRelativeTo(null);
            cadpedido.setVisible(true);
            dispose();
        }else{
            JFrame frame = new JFrame ("Aviso!");
            JOptionPane.showMessageDialog (frame, "Id não encontrado ou falta produto no estoque!");

            TelaCadastrarPedido cadpedido = new TelaCadastrarPedido(padaria);
            cadpedido.setLocationRelativeTo(null);
            cadpedido.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btConfirmarActionPerformed

    private void idClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConfirmar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JTextField idCliente;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
